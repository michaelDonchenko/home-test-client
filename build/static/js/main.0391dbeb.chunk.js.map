{"version":3,"sources":["api/products.js","redux/actions/productActions.js","components/Title.js","redux/reducers/productSlice.js","redux/reducers/modalSlice.js","components/ProductsTable.js","components/modals/CreateProductModal.js","utils/RefreshList.js","components/modals/UpdateProductModal.js","pages/Admin.js","redux/reducers/cartSlice.js","components/ProductItem.js","components/ProductsContainer.js","api/order.js","pages/Home.js","redux/actions/orderActions.js","pages/Stats.js","pages/Error.js","components/Navbar.js","App.js","redux/reducers/orderSlice.js","redux/store.js","index.js"],"names":["server_url","process","fetchProducts","a","axios","get","fetchProduct","id","createProduct","values","post","deleteProduct","delete","updateProduct","put","getProducts","createAsyncThunk","_","rejectWithValue","response","console","log","data","getProduct","create","destroy","update","Title","text","Typography","align","variant","style","margin","productSlice","createSlice","name","initialState","products","loading","error","success","productId","product","reducers","resetSuccess","state","setProductToUpdate","payload","resetProductId","clearProduct","extraReducers","builder","addCase","pending","action","fulfilled","rejected","message","actions","modalSlice","createModal","editModal","openCreateModal","closeCreateModal","openEditModal","closeEditModal","useStyles","makeStyles","table","minWidth","button","display","buttonsWrapper","flexDirection","ProductsTable","classes","dispatch","useDispatch","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","TableBody","map","i","title","price","Button","color","onClick","styles","inputField","width","maxWidth","CreateProductModal","useSelector","modal","useState","description","image_url","setValues","handleClsoe","handleChange","e","target","value","Dialog","fullWidth","onClose","open","marginTop","DialogContent","onSubmit","preventDefault","TextField","type","label","onChange","required","multiline","rows","RefreshList","UpdateProductModal","modalState","productState","obj","addButton","marginLeft","marginBottom","Admin","useEffect","length","cart","window","localStorage","getItem","JSON","parse","cartSlice","addToCart","removeCart","wrapper","padding","minHeight","details","flexGrow","ProductItem","elevation","src","alt","productToAdd","setItem","stringify","push","flexWrap","marign","justifyContent","ProductsContainer","placeOrder","topFiveSoldItems","topFiveUniqueItems","pastFiveDaysSales","shoppingButton","menuWrapper","Home","cartState","React","anchorEl","setAnchorEl","countTotal","cartPrices","forEach","cartItem","reduce","accumulator","currentValue","handlePlaceOrder","cartTotal","removeItem","event","currentTarget","Menu","keepMounted","Boolean","item","float","topSoldItems","topUniqueItems","fiveDaysSales","flexContainer","paperContainer","Stats","orderState","order","topSoldProducts","topUniqueProducts","fiveDaysSalesProducts","Object","entries","day","ErrorPage","navLink","textDecoration","Navbar","AppBar","position","Container","Toolbar","to","App","CssBaseline","exact","path","Error","orderSlice","salesByDay","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0391dbeb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const fetchProducts = async () =>\r\n  await axios.get(`${server_url}/product/products`)\r\n\r\nexport const fetchProduct = async (id) =>\r\n  await axios.get(`${server_url}/product/product/${id}`)\r\n\r\nexport const createProduct = async (values) =>\r\n  await axios.post(`${server_url}/product/create-product`, values)\r\n\r\nexport const deleteProduct = async (id) =>\r\n  await axios.delete(`${server_url}/product/delete/${id}`)\r\n\r\nexport const updateProduct = async (values) =>\r\n  await axios.put(`${server_url}/product/update/${values.id}`, values.values)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  fetchProduct,\r\n  fetchProducts,\r\n  updateProduct,\r\n} from '../../api/products'\r\n\r\nexport const getProducts = createAsyncThunk(\r\n  'product/getProducts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchProducts()\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getProduct = createAsyncThunk(\r\n  'product/getProduct',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchProduct(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const create = createAsyncThunk(\r\n  'product/create',\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const response = await createProduct(values)\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const destroy = createAsyncThunk(\r\n  'product/destroy',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await deleteProduct(id)\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const update = createAsyncThunk(\r\n  'product/update',\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const response = await updateProduct(values)\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst Title = ({ text }) => {\r\n  return (\r\n    <Typography align=\"center\" variant=\"h4\" style={{ margin: '2rem 0' }}>\r\n      {text}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  create,\r\n  destroy,\r\n  getProduct,\r\n  getProducts,\r\n  update,\r\n} from '../actions/productActions'\r\n\r\nconst initialState = {\r\n  products: null,\r\n  loading: false,\r\n  error: null,\r\n  success: null,\r\n  productId: null,\r\n  product: null,\r\n}\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  reducers: {\r\n    resetSuccess: (state) => {\r\n      state.success = null\r\n    },\r\n    setProductToUpdate: (state, { payload }) => {\r\n      state.productId = payload\r\n    },\r\n    resetProductId: (state) => {\r\n      state.productId = null\r\n    },\r\n    clearProduct: (state) => {\r\n      state.product = null\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      //get products\r\n      .addCase(getProducts.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getProducts.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.products = action.payload.data.products\r\n      })\r\n      .addCase(getProducts.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      //get products\r\n      .addCase(getProduct.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(getProduct.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.product = action.payload.data.product\r\n      })\r\n      .addCase(getProduct.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      //create product\r\n      .addCase(create.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(create.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.success = action.payload.data.message\r\n      })\r\n      .addCase(create.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      //delete product\r\n      .addCase(destroy.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(destroy.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.success = action.payload.data.message\r\n      })\r\n      .addCase(destroy.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      //update product\r\n      .addCase(update.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(update.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.success = action.payload.data.message\r\n      })\r\n      .addCase(update.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  resetSuccess,\r\n  setProductToUpdate,\r\n  resetProductId,\r\n  clearProduct,\r\n} = productSlice.actions\r\n\r\nexport default productSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  createModal: false,\r\n  editModal: false,\r\n}\r\n\r\nexport const modalSlice = createSlice({\r\n  name: 'modal',\r\n  initialState,\r\n  reducers: {\r\n    openCreateModal: (state) => {\r\n      state.createModal = true\r\n    },\r\n    closeCreateModal: (state) => {\r\n      state.createModal = false\r\n    },\r\n    openEditModal: (state) => {\r\n      state.editModal = true\r\n    },\r\n    closeEditModal: (state) => {\r\n      state.editModal = false\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  openCreateModal,\r\n  closeCreateModal,\r\n  openEditModal,\r\n  closeEditModal,\r\n} = modalSlice.actions\r\n\r\nexport default modalSlice.reducer\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Button } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { destroy } from '../redux/actions/productActions'\r\nimport { setProductToUpdate } from '../redux/reducers/productSlice'\r\nimport { openEditModal } from '../redux/reducers/modalSlice'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n  button: {\r\n    margin: '0.2rem',\r\n    display: 'flex',\r\n  },\r\n  buttonsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n})\r\n\r\nconst ProductsTable = ({ products }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(destroy(id))\r\n  }\r\n\r\n  const handleUpdate = (id) => {\r\n    dispatch(setProductToUpdate(id))\r\n    dispatch(openEditModal())\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Price</TableCell>\r\n            <TableCell>Options</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products.map((product, i) => {\r\n            return (\r\n              <TableRow>\r\n                <TableCell>{product.title}</TableCell>\r\n                <TableCell>{product.price} $</TableCell>\r\n                <TableCell>\r\n                  <div className={classes.buttonsWrapper}>\r\n                    <Button\r\n                      className={classes.button}\r\n                      variant=\"outlined\"\r\n                      style={{ color: 'blue' }}\r\n                      onClick={() => handleUpdate(product.id)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => handleDelete(product.id)}\r\n                      className={classes.button}\r\n                      variant=\"outlined\"\r\n                      style={{ color: 'red' }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default ProductsTable\r\n","import React, { useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeCreateModal } from '../../redux/reducers/modalSlice'\r\nimport { Button, DialogContent, TextField, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { create } from '../../redux/actions/productActions'\r\n\r\nconst styles = makeStyles({\r\n  inputField: {\r\n    width: '300px',\r\n    margin: '2rem auto',\r\n    display: 'flex',\r\n    maxWidth: '90%',\r\n  },\r\n})\r\n\r\nconst CreateProductModal = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const modalState = useSelector((state) => state.modal)\r\n  const { createModal } = modalState\r\n\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    price: 0,\r\n    description: '',\r\n    image_url: '',\r\n  })\r\n\r\n  const { title, price, description, image_url } = values\r\n\r\n  const handleClsoe = () => {\r\n    dispatch(closeCreateModal())\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(create(values))\r\n    handleClsoe()\r\n    setValues({\r\n      title: '',\r\n      price: 0,\r\n      description: '',\r\n      image_url: '',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth=\"sm\"\r\n      onClose={handleClsoe}\r\n      open={createModal}\r\n    >\r\n      <Typography align=\"center\" variant=\"h5\" style={{ marginTop: '2rem' }}>\r\n        Create new product\r\n      </Typography>\r\n\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            name=\"title\"\r\n            value={title}\r\n            className={classes.inputField}\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <TextField\r\n            className={classes.inputField}\r\n            type=\"number\"\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            value={price}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <TextField\r\n            className={classes.inputField}\r\n            multiline\r\n            rows={5}\r\n            type=\"text\"\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <TextField\r\n            className={classes.inputField}\r\n            type=\"url\"\r\n            label=\"Image url\"\r\n            name=\"image_url\"\r\n            value={image_url}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <Button\r\n            className={classes.inputField}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default CreateProductModal\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts } from '../redux/actions/productActions'\r\nimport { resetSuccess } from '../redux/reducers/productSlice'\r\n\r\nconst RefreshList = () => {\r\n  const dispatch = useDispatch()\r\n  const productState = useSelector((state) => state.product)\r\n  const { success } = productState\r\n\r\n  const checkSuccess = () => {\r\n    if (success) {\r\n      dispatch(resetSuccess())\r\n      dispatch(getProducts())\r\n    }\r\n  }\r\n\r\n  return <>{checkSuccess()}</>\r\n}\r\n\r\nexport default RefreshList\r\n","import React, { useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { closeEditModal } from '../../redux/reducers/modalSlice'\r\nimport { Button, DialogContent, TextField, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { clearProduct, resetProductId } from '../../redux/reducers/productSlice'\r\nimport { update } from '../../redux/actions/productActions'\r\n\r\nconst styles = makeStyles({\r\n  inputField: {\r\n    width: '300px',\r\n    margin: '2rem auto',\r\n    display: 'flex',\r\n    maxWidth: '90%',\r\n  },\r\n})\r\n\r\nconst UpdateProductModal = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const modalState = useSelector((state) => state.modal)\r\n  const productState = useSelector((state) => state.product)\r\n  const { editModal } = modalState\r\n  const { product, loading, productId } = productState\r\n\r\n  const [values, setValues] = useState({\r\n    id: '',\r\n    title: '',\r\n    price: 0,\r\n    description: '',\r\n    image_url: '',\r\n  })\r\n\r\n  const { title, price, description, image_url, id } = values\r\n  const obj = {\r\n    id: id,\r\n    values: { title, price, description, image_url },\r\n  }\r\n\r\n  if (product && productId) {\r\n    dispatch(resetProductId())\r\n    setValues({\r\n      id: product.id,\r\n      title: product.title,\r\n      price: product.price,\r\n      description: product.description,\r\n      image_url: product.image_url,\r\n    })\r\n  }\r\n\r\n  const handleClsoe = () => {\r\n    dispatch(closeEditModal())\r\n    dispatch(clearProduct())\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    handleClsoe()\r\n    dispatch(update(obj))\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth=\"sm\"\r\n      onClose={handleClsoe}\r\n      open={editModal}\r\n    >\r\n      <Typography align=\"center\" variant=\"h5\" style={{ marginTop: '2rem' }}>\r\n        Update product\r\n      </Typography>\r\n\r\n      <DialogContent>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              name=\"title\"\r\n              value={title}\r\n              className={classes.inputField}\r\n              type=\"text\"\r\n              label=\"Title\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              type=\"number\"\r\n              label=\"Price\"\r\n              name=\"price\"\r\n              value={price}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              multiline\r\n              rows={5}\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              type=\"url\"\r\n              label=\"Image url\"\r\n              name=\"image_url\"\r\n              value={image_url}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <Button\r\n              className={classes.inputField}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateProductModal\r\n","import React, { useEffect } from 'react'\r\nimport { getProduct, getProducts } from '../redux/actions/productActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Title from '../components/Title'\r\nimport ProductsTable from '../components/ProductsTable'\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { openCreateModal } from '../redux/reducers/modalSlice'\r\nimport CreateProductModal from '../components/modals/CreateProductModal'\r\nimport RefreshList from '../utils/RefreshList'\r\nimport UpdateProductModal from '../components/modals/UpdateProductModal'\r\n\r\nconst styles = makeStyles({\r\n  addButton: {\r\n    marginLeft: 'auto',\r\n    display: 'flex',\r\n    marginBottom: '2rem',\r\n  },\r\n})\r\n\r\nconst Admin = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const productState = useSelector((state) => state.product)\r\n  const { loading, error, products, productId } = productState\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(getProduct(productId))\r\n    }\r\n  }, [productId])\r\n\r\n  const handleCreateProductOpen = () => {\r\n    dispatch(openCreateModal())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Title text=\"Admin page\" />\r\n\r\n        <Button\r\n          onClick={handleCreateProductOpen}\r\n          className={classes.addButton}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add new\r\n        </Button>\r\n\r\n        {loading && <p>Loading...</p>}\r\n        {!loading && products && !products.length && (\r\n          <p>No products found...</p>\r\n        )}\r\n        {!loading && products && products.length > 0 && (\r\n          <ProductsTable products={products} />\r\n        )}\r\n      </div>\r\n\r\n      {/* modals */}\r\n      <CreateProductModal />\r\n      <UpdateProductModal />\r\n\r\n      {/* utils */}\r\n      <RefreshList />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartFromLocalStorage = window.localStorage.getItem('cart')\r\n  ? JSON.parse(window.localStorage.getItem('cart'))\r\n  : null\r\n\r\nconst initialState = {\r\n  cart: cartFromLocalStorage,\r\n}\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      state.cart = action.payload\r\n    },\r\n    removeCart: (state) => {\r\n      state.cart = null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addToCart, removeCart } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer\r\n","import React from 'react'\r\nimport { Button, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addToCart } from '../redux/reducers/cartSlice'\r\n\r\nconst styles = makeStyles({\r\n  wrapper: {\r\n    width: '280px',\r\n    maxWidth: '90%',\r\n    display: 'flex',\r\n    margin: '0.5rem',\r\n    padding: '0.5rem',\r\n    minHeight: '400px',\r\n    flexDirection: 'column',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n  },\r\n})\r\n\r\nconst ProductItem = ({ product }) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    let productToAdd = {\r\n      title: product.title,\r\n      price: product.price,\r\n    }\r\n\r\n    if (localStorage.getItem('cart') === null) {\r\n      localStorage.setItem('cart', JSON.stringify([productToAdd]))\r\n\r\n      dispatch(addToCart([productToAdd]))\r\n    } else {\r\n      cart = JSON.parse(localStorage.getItem('cart'))\r\n      cart.push(productToAdd)\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n      dispatch(addToCart(cart))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2} className={classes.wrapper}>\r\n      <Typography\r\n        variant=\"h5\"\r\n        align=\"center\"\r\n        style={{ marginBottom: '0.5rem' }}\r\n      >\r\n        {product.title}\r\n      </Typography>\r\n\r\n      <div className={classes.details}>\r\n        <img src={product.image_url} alt={product.title} />\r\n        <p>{product.description}</p>\r\n        <p>Price: {product.price} $</p>\r\n      </div>\r\n\r\n      <Button onClick={handleAddToCart} variant=\"contained\" color=\"primary\">\r\n        Buy\r\n      </Button>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ProductItem\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport ProductItem from './ProductItem'\r\n\r\nconst styles = makeStyles({\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '0.2rem',\r\n    marign: '1rem 0',\r\n    justifyContent: 'center',\r\n  },\r\n})\r\n\r\nconst ProductsContainer = ({ products }) => {\r\n  const classes = styles()\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {products.map((product) => (\r\n        <ProductItem product={product} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsContainer\r\n","import axios from 'axios'\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const placeOrder = async (values) =>\r\n  await axios.post(`${server_url}/order/place-order`, values)\r\n\r\nexport const topFiveSoldItems = async () =>\r\n  await axios.get(`${server_url}/order/top-sold-items`)\r\n\r\nexport const topFiveUniqueItems = async () =>\r\n  await axios.get(`${server_url}/order/top-unique-items`)\r\n\r\nexport const pastFiveDaysSales = async () =>\r\n  await axios.get(`${server_url}/order/past-five-days-sales`)\r\n","import React, { useEffect } from 'react'\r\nimport { getProducts } from '../redux/actions/productActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Title from '../components/Title'\r\nimport ProductsContainer from '../components/ProductsContainer'\r\nimport { Button, makeStyles, Menu, Typography } from '@material-ui/core'\r\nimport { placeOrder } from '../api/order'\r\nimport { removeCart } from '../redux/reducers/cartSlice'\r\n\r\nconst styles = makeStyles({\r\n  shoppingButton: {\r\n    marginLeft: 'auto',\r\n    display: 'flex',\r\n    marginTop: '2rem',\r\n  },\r\n  menuWrapper: {\r\n    width: '300px',\r\n    maxWidth: '90%',\r\n    minHeight: '350px',\r\n    margin: '1rem auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n})\r\n\r\nconst Home = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const productState = useSelector((state) => state.product)\r\n  const cartState = useSelector((state) => state.cart)\r\n  const { loading, products } = productState\r\n  const { cart } = cartState\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const countTotal = (cart) => {\r\n    let cartPrices = []\r\n\r\n    if (cart === null) {\r\n      return\r\n    }\r\n\r\n    cart.forEach((cartItem) => cartPrices.push(cartItem.price))\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue\r\n\r\n    return cartPrices.reduce(reducer)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts())\r\n  }, [])\r\n\r\n  const handlePlaceOrder = async () => {\r\n    const { data } = await placeOrder({\r\n      products: cart,\r\n      cartTotal: countTotal(cart),\r\n    })\r\n    if (data.message === 'Order created succefully') {\r\n      localStorage.removeItem('cart')\r\n      dispatch(removeCart())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          className={classes.shoppingButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Shopping cart {` / ${cart && cart.length > 0 ? cart.length : ''}`}\r\n        </Button>\r\n        <Title text=\"Home page\" />\r\n\r\n        {loading && <p>Loading...</p>}\r\n        {!loading && products && products.length === 0 && (\r\n          <p>No products found</p>\r\n        )}\r\n        {!loading && products && products.length > 0 && (\r\n          <ProductsContainer products={products} />\r\n        )}\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <div className={classes.menuWrapper}>\r\n            <div style={{ flexGrow: 1 }}>\r\n              {cart === null ? (\r\n                <Typography variant=\"h6\">No products in cart...</Typography>\r\n              ) : (\r\n                <>\r\n                  {cart.map((item, i) => (\r\n                    <Typography key={i} variant=\"h6\">\r\n                      {item.title}\r\n                      <span style={{ float: 'right' }}>{item.price} $</span>\r\n                    </Typography>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"h6\">\r\n                Cart total: {countTotal(cart)} $\r\n              </Typography>\r\n\r\n              <Button\r\n                onClick={handlePlaceOrder}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{\r\n                  width: '300px',\r\n                  maxWidth: '90%',\r\n                  margin: '0.5rem 0',\r\n                }}\r\n              >\r\n                Pay\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Menu>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  pastFiveDaysSales,\r\n  topFiveSoldItems,\r\n  topFiveUniqueItems,\r\n} from '../../api/order'\r\n\r\nexport const topSoldItems = createAsyncThunk(\r\n  'order/topSoldItems',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await topFiveSoldItems()\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const topUniqueItems = createAsyncThunk(\r\n  'order/topUniqueItems',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await topFiveUniqueItems()\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const fiveDaysSales = createAsyncThunk(\r\n  'order/fiveDaysSales',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await pastFiveDaysSales()\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.log(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  fiveDaysSales,\r\n  topSoldItems,\r\n  topUniqueItems,\r\n} from '../redux/actions/orderActions'\r\nimport Title from '../components/Title'\r\nimport { makeStyles, Paper, Typography } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    padding: '1rem',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paperContainer: {\r\n    margin: '1rem',\r\n    width: '250px',\r\n    maxWidth: '95%',\r\n    minHeight: '300px',\r\n    padding: '1rem',\r\n  },\r\n})\r\n\r\nconst Stats = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const orderState = useSelector((state) => state.order)\r\n\r\n  const {\r\n    topSoldProducts,\r\n    topUniqueItems: topUniqueProducts,\r\n    loading,\r\n    fiveDaysSales: fiveDaysSalesProducts,\r\n  } = orderState\r\n\r\n  useEffect(() => {\r\n    dispatch(topSoldItems())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(topUniqueItems())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(fiveDaysSales())\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Title text=\"Stats page\" />\r\n\r\n      {loading && <p>Loading...</p>}\r\n\r\n      <div className={classes.flexContainer}>\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h6\">Top 5 sales</Typography>\r\n          {topSoldProducts ? (\r\n            topSoldProducts.map((product, i) => {\r\n              return (\r\n                <p key={i}>\r\n                  {product[0]} - {product[1]}\r\n                </p>\r\n              )\r\n            })\r\n          ) : (\r\n            <p>No products found...</p>\r\n          )}\r\n        </Paper>\r\n\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h6\">Top 5 unique sales</Typography>\r\n          {topUniqueProducts ? (\r\n            topUniqueProducts.map((product, i) => {\r\n              return (\r\n                <p key={i}>\r\n                  {product[0]} - {product[1]}\r\n                </p>\r\n              )\r\n            })\r\n          ) : (\r\n            <p>No products found...</p>\r\n          )}\r\n        </Paper>\r\n\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h6\">past 5 days sales</Typography>\r\n          {fiveDaysSalesProducts ? (\r\n            Object.entries(fiveDaysSalesProducts).map((day, i) => (\r\n              <p key={i}>{`${day[0]} - ${day[1]} $`}</p>\r\n            ))\r\n          ) : (\r\n            <p>No orders yet...</p>\r\n          )}\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react'\r\n\r\nconst ErrorPage = () => {\r\n  return <div>404 page not found</div>\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container } from '@material-ui/core'\r\n\r\nconst styles = makeStyles({\r\n  navLink: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n})\r\n\r\nconst Navbar = () => {\r\n  const classes = styles()\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container>\r\n        <Toolbar>\r\n          <Button color=\"inherit\">\r\n            <Link className={classes.navLink} to=\"/home\">\r\n              Home\r\n            </Link>\r\n          </Button>\r\n\r\n          <Button color=\"inherit\">\r\n            <Link className={classes.navLink} to=\"/admin\">\r\n              Admin\r\n            </Link>\r\n          </Button>\r\n\r\n          <Button color=\"inherit\">\r\n            <Link className={classes.navLink} to=\"/stats\">\r\n              Stats\r\n            </Link>\r\n          </Button>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport Admin from './pages/Admin'\nimport Home from './pages/Home'\nimport Stats from './pages/Stats'\nimport Error from './pages/Error'\nimport { Container, CssBaseline } from '@material-ui/core'\nimport Navbar from './components/Navbar'\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <CssBaseline />\n        <Navbar />\n        <Container maxWidth=\"md\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/admin\" component={Admin} />\n            <Route exact path=\"/stats\" component={Stats} />\n            <Route exact path=\"*\" component={Error} />\n          </Switch>\n        </Container>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  fiveDaysSales,\r\n  topSoldItems,\r\n  topUniqueItems,\r\n} from '../actions/orderActions'\r\n\r\nconst initialState = {\r\n  topSoldProducts: null,\r\n  topUniqueItems: null,\r\n  fiveDaysSales: null,\r\n  loading: false,\r\n}\r\n\r\nexport const orderSlice = createSlice({\r\n  name: 'order',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // top five sold orders\r\n      .addCase(topSoldItems.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(topSoldItems.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.topSoldProducts = action.payload.data.products\r\n      })\r\n      .addCase(topSoldItems.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      // top five unique orders\r\n      .addCase(topUniqueItems.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(topUniqueItems.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.topUniqueItems = action.payload.data.products\r\n      })\r\n      .addCase(topUniqueItems.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n      // past five days sales\r\n      .addCase(fiveDaysSales.pending, (state, action) => {\r\n        state.loading = true\r\n      })\r\n      .addCase(fiveDaysSales.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.fiveDaysSales = action.payload.data.salesByDay\r\n      })\r\n      .addCase(fiveDaysSales.rejected, (state, action) => {\r\n        state.loading = false\r\n        state.error = action.payload.message\r\n      })\r\n  },\r\n})\r\n\r\nexport const {} = orderSlice.actions\r\n\r\nexport default orderSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport productSlice from './reducers/productSlice'\r\nimport modalSlice from './reducers/modalSlice'\r\nimport cartSlice from './reducers/cartSlice'\r\nimport orderSlice from './reducers/orderSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    product: productSlice,\r\n    modal: modalSlice,\r\n    cart: cartSlice,\r\n    order: orderSlice,\r\n  },\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}